name: Deploy to Cloud Run

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  PROJECT_ID: datalake-betminds
  REGION: us-central1
  SERVICE_NAME: linx-orders-importer

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        docker build -t us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/linx-orders-importer/${{ env.SERVICE_NAME }}:${{ github.sha }} -f cloud-run/Dockerfile .
        docker push us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/linx-orders-importer/${{ env.SERVICE_NAME }}:${{ github.sha }}

    - name: Deploy to Cloud Run
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/linx-orders-importer/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --timeout 900 \
          --concurrency 80 \
          --max-instances 10 \
          --set-env-vars="LINX_API_BASE_URL=${{ secrets.LINX_API_BASE_URL }},LINX_API_USERNAME=${{ secrets.LINX_API_USERNAME }},LINX_API_PASSWORD=${{ secrets.LINX_API_PASSWORD }},BIGQUERY_PROJECT_ID=${{ env.PROJECT_ID }},BIGQUERY_DATASET_ID=prataearte,BIGQUERY_TABLE_ID=pedidos"

    - name: Get Cloud Run URL
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        echo "Service URL: $(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format='value(status.url)')"
